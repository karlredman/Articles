<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on Articles</title>
    <link>https://karlredman.github.io/Articles/categories/programming/</link>
    <description>Recent content in programming on Articles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Feb 2020 05:56:37 -0600</lastBuildDate>
    
	<atom:link href="https://karlredman.github.io/Articles/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go: GVM and Portable-ish Workspaces (Part 1: Setup DISTILLED)</title>
      <link>https://karlredman.github.io/Articles/dev.to/go_gvm_and_portable-ish_workspaces_part_1_setup_distilled/</link>
      <pubDate>Tue, 11 Feb 2020 05:56:37 -0600</pubDate>
      
      <guid>https://karlredman.github.io/Articles/dev.to/go_gvm_and_portable-ish_workspaces_part_1_setup_distilled/</guid>
      <description>This is a distilled version of Go: GVM and Portable-ish Workspaces (Part 1: Setup)
 GVM repo: moovweb/gvm: Go Version Manager   Add this to toward the bottom of your .bashrc so .gvm can function
[[ -s &amp;quot;/home/karl/.gvm/scripts/gvm&amp;quot; ]] &amp;amp;&amp;amp; source &amp;quot;/home/karl/.gvm/scripts/gvm&amp;quot;  Add this alias to your .bashrc (after the preceding entry)
 You will need this to reset permissions for gvm managed pkgset directories -because gvm is flaky like that</description>
    </item>
    
    <item>
      <title>Go: GVM and Portable-ish Workspaces (Part 1: Setup)</title>
      <link>https://karlredman.github.io/Articles/dev.to/go_gvm_and_portable-ish_workspaces_part_1_setup/</link>
      <pubDate>Tue, 11 Feb 2020 05:56:37 -0600</pubDate>
      
      <guid>https://karlredman.github.io/Articles/dev.to/go_gvm_and_portable-ish_workspaces_part_1_setup/</guid>
      <description>This is an article about getting (linux based) gvm up and running and how to manage portable workspaces. gvm is geared for use with bash shell but should work with most other shells -millage may vary.
Admittedly, this is a long post with a lot of specific information that is important to running gvm efficiently. I promis you that, while the content here seems arduious, tasks outlined here will save you a lot of time and frustration in the future.</description>
    </item>
    
    <item>
      <title>Golang: Independent Custom Workspaces</title>
      <link>https://karlredman.github.io/Articles/dev.to/go-independent-custom-workspaces/</link>
      <pubDate>Sat, 08 Feb 2020 02:53:15 -0600</pubDate>
      
      <guid>https://karlredman.github.io/Articles/dev.to/go-independent-custom-workspaces/</guid>
      <description>Up to and including go1.13.7, $GOPATH, $GOBIN and the Go toolchain make it very difficult to isolate the Go Workspace for any development / production / runtime environments outside of the Go Contributers&#39; agenda and scope of ideology.
This article attempts to illustrate how one might go about working around these severe Go environment limitations. Also, I&amp;rsquo;m a big fan of golang and I want to use it in a more wide ranging and versatile real-world environment.</description>
    </item>
    
    <item>
      <title>Be a Python Jinja Master: Automated Front Matter Editing</title>
      <link>https://karlredman.github.io/Articles/dev.to/be-a-python-jinja-master-automated-front-matter-editing/</link>
      <pubDate>Tue, 11 Jun 2019 23:13:35 -0500</pubDate>
      
      <guid>https://karlredman.github.io/Articles/dev.to/be-a-python-jinja-master-automated-front-matter-editing/</guid>
      <description>I&amp;rsquo;m pleased to announce the initial release of EditFrontMatter: A python module for editing markdown front matter using Jinja2 Templates.
 See: EditFrontMatter Project Homepage Several examples are included in the documentation  Basic usage Advanced mulit-pass processor Recursive directory walker that uses multi-threading to edit files   The Pitch: Imagine that you could retain all of your various article and documentation content in markdown. And then cater that content to whichever static site generator1, and theme thereof, without manually editing each and every file.</description>
    </item>
    
    <item>
      <title>How To Be A Computer Programmer</title>
      <link>https://karlredman.github.io/Articles/medium/howto_beaprogrammer/</link>
      <pubDate>Wed, 06 Dec 2017 07:57:35 -0500</pubDate>
      
      <guid>https://karlredman.github.io/Articles/medium/howto_beaprogrammer/</guid>
      <description>(A Realistic Assessment): Every so often someone asks me or for advice on how to be a computer programmer. This question has always caused me a bit of anxiety because it brings up all sorts of other thoughts like, &amp;lsquo;the semantic and social differences in the definitions between a coder, a programmer and an engineer&amp;rsquo;, or &amp;lsquo;what is the context of the word &amp;ldquo;how&amp;rdquo; in this question?&amp;rsquo;. It&amp;rsquo;s a simple question with an extremely complex and subjective set of answers.</description>
    </item>
    
  </channel>
</rss>