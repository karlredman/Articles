<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development on Articles</title>
    <link>https://karlredman.github.io/Articles/tags/development/</link>
    <description>Recent content in development on Articles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Jun 2019 23:13:35 -0500</lastBuildDate>
    
	<atom:link href="https://karlredman.github.io/Articles/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang: Independent Custom Workspaces</title>
      <link>https://karlredman.github.io/Articles/dev.to/go-independent-custom-workspaces/</link>
      <pubDate>Tue, 11 Jun 2019 23:13:35 -0500</pubDate>
      
      <guid>https://karlredman.github.io/Articles/dev.to/go-independent-custom-workspaces/</guid>
      <description>Golang: Independent Custom Workspaces  Originally published 20200207 Go: Independent Custom Workspaces - DEV Community üë©‚Äçüíªüë®‚Äçüíª  TL;DR: Up to and including go1.13.7, $GOPATH, $GOBIN and the Go toolchain make it very difficult to isolate the Go Workspace for any development / production / runtime environments outside of the Go Contributers&#39; agenda and scope of ideology.
This article attempts to illustrate how one might go about working around these severe Go environment limitations.</description>
    </item>
    
    <item>
      <title>Resolve docker hostnames from host with DNS Proxy Server</title>
      <link>https://karlredman.github.io/Articles/dev.to/docker_hostnames_from_host/</link>
      <pubDate>Sun, 03 Mar 2019 07:35:35 -0500</pubDate>
      
      <guid>https://karlredman.github.io/Articles/dev.to/docker_hostnames_from_host/</guid>
      <description>This article is a continuation of my previous HowTo: Dnsmasq + NetworkManager + Private Network Setup. With just a few configuration changes we will add the capability to interact with docker containers by their respective hostnames. Even though the dns-proxy-server project affords us this new functionality I recommend that dns-proxy-server only be used for development purposes.
While it&amp;rsquo;s awesome to have the ability to reference individual containers by hostname during development efforts the concept doesn&amp;rsquo;t scale well.</description>
    </item>
    
  </channel>
</rss>