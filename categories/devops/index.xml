<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devops on Articles</title>
    <link>https://karlredman.github.io/Articles/categories/devops/</link>
    <description>Recent content in devops on Articles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Feb 2020 06:10:31 -0600</lastBuildDate>
    
	<atom:link href="https://karlredman.github.io/Articles/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go: GVM and Portable-ish Workspaces (Part 1: Setup)</title>
      <link>https://karlredman.github.io/Articles/dev.to/go_gvm_and_portable-ish_workspaces_part_1_setup/</link>
      <pubDate>Tue, 11 Feb 2020 06:10:31 -0600</pubDate>
      
      <guid>https://karlredman.github.io/Articles/dev.to/go_gvm_and_portable-ish_workspaces_part_1_setup/</guid>
      <description>This is an article about getting (linux based) gvm up and running and how to manage portable workspaces. gvm is geared for use with bash shell but should work with most other shells -millage may vary.
Admittedly, this is a long post with a lot of specific information that is important to running gvm efficiently. I promis you that, while the content here seems arduious, tasks outlined here will save you a lot of time and frustration in the future.</description>
    </item>
    
    <item>
      <title>Go: GVM and Portable-ish Workspaces (Part 1: Setup DISTILLED)</title>
      <link>https://karlredman.github.io/Articles/dev.to/go_gvm_and_portable-ish_workspaces_part_1_setup_distilled/</link>
      <pubDate>Tue, 11 Feb 2020 05:56:37 -0600</pubDate>
      
      <guid>https://karlredman.github.io/Articles/dev.to/go_gvm_and_portable-ish_workspaces_part_1_setup_distilled/</guid>
      <description>This is a distilled version of Go: GVM and Portable-ish Workspaces (Part 1: Setup)
 GVM repo: moovweb/gvm: Go Version Manager   Add this to toward the bottom of your .bashrc so .gvm can function
[[ -s &amp;#34;/home/karl/.gvm/scripts/gvm&amp;#34; ]] &amp;amp;&amp;amp; source &amp;#34;/home/karl/.gvm/scripts/gvm&amp;#34; Add this alias to your .bashrc (after the preceding entry)
 You will need this to reset permissions for gvm managed pkgset directories -because gvm is flaky like that</description>
    </item>
    
    <item>
      <title>Golang: Independent Custom Workspaces</title>
      <link>https://karlredman.github.io/Articles/dev.to/go-independent-custom-workspaces/</link>
      <pubDate>Sat, 08 Feb 2020 02:53:15 -0600</pubDate>
      
      <guid>https://karlredman.github.io/Articles/dev.to/go-independent-custom-workspaces/</guid>
      <description>Up to and including go1.13.7, $GOPATH, $GOBIN and the Go toolchain make it very difficult to isolate the Go Workspace for any development / production / runtime environments outside of the Go Contributers&#39; agenda and scope of ideology.
This article attempts to illustrate how one might go about working around these severe Go environment limitations. Also, I&amp;rsquo;m a big fan of golang and I want to use it in a more wide ranging and versatile real-world environment.</description>
    </item>
    
  </channel>
</rss>