<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jinja2 on Articles</title>
    <link>https://karlredman.github.io/Articles/tags/jinja2/</link>
    <description>Recent content in jinja2 on Articles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Jun 2019 23:13:35 -0500</lastBuildDate>
    
	<atom:link href="https://karlredman.github.io/Articles/tags/jinja2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Be a Python Jinja Master: Automated Front Matter Editing</title>
      <link>https://karlredman.github.io/Articles/dev.to/be-a-python-jinja-master-automated-front-matter-editing/</link>
      <pubDate>Tue, 11 Jun 2019 23:13:35 -0500</pubDate>
      
      <guid>https://karlredman.github.io/Articles/dev.to/be-a-python-jinja-master-automated-front-matter-editing/</guid>
      <description>I&amp;rsquo;m pleased to announce the initial release of EditFrontMatter: A python module for editing markdown front matter using Jinja2 Templates.
 See: EditFrontMatter Project Homepage Several examples are included in the documentation  Basic usage Advanced mulit-pass processor Recursive directory walker that uses multi-threading to edit files   The Pitch: Imagine that you could retain all of your various article and documentation content in markdown. And then cater that content to whichever static site generator1, and theme thereof, without manually editing each and every file.</description>
    </item>
    
    <item>
      <title>Parasynthetic.dev drone/ci (v1.6.2) Setup:</title>
      <link>https://karlredman.github.io/Articles/dev.to/parasynthetic.dev-drone_ci-v1.6.2-setup_/</link>
      <pubDate>Tue, 11 Jun 2019 23:13:35 -0500</pubDate>
      
      <guid>https://karlredman.github.io/Articles/dev.to/parasynthetic.dev-drone_ci-v1.6.2-setup_/</guid>
      <description>Original document creation date: 10/01/2020
Parasynthetic.dev drone/ci (v1.6.2) Setup: Parasynthetic.dev is an eccosystem of development tools that includes the following services:
 Traefik (v1.7.11): Network Proxy server (and Let&amp;rsquo;s Encrypt ACME v2 client)  As of this writing Traefik v2+ is not entirely production ready IMHO.  Gitea (v1.10.2): Private git repository  bare metal installation uses Mysql on bare metal  Drone CI (v1.6.2): Private build system instance  Docker based installation uses Sqlite as database  Portus (v2.</description>
    </item>
    
  </channel>
</rss>